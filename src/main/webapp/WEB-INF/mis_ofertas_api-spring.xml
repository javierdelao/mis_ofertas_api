<?xml version='1.0' encoding='UTF-8' ?>
<!--
  ~ Copyright (c) 2017 Business News Americas Limitada - All Rights Reserved
  ~ Unauthorized copying of this file, via any medium is strictly prohibited
  ~ Proprietary and confidential
  -->

<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:property-placeholder
            ignore-resource-not-found="false"
            location="classpath:mis_ofertas_api.config.properties"
    />

    <mvc:annotation-driven
            ignore-default-model-on-redirect="true"
    />


    <!--Async enabled-->
    <task:annotation-driven executor="integracionExecutor" scheduler="integracionScheduler"/>
    <task:executor id="integracionExecutor" pool-size="${async-executor-pool-size}"/>
    <task:scheduler id="integracionScheduler" pool-size="${async-scheduler-pool-size}"/>

    <!--Configuration -->
    <bean id="configProperties" class="com.mis_ofertas_api.app.util.ConfigProperties">
        <property name="map">
            <map>
                <entry key="url-base" value="${url-base}"/>
                <entry key="jdbc.auto" value="${jdbc.auto}"/>
            </map>
        </property>
    </bean>

    <!--Data Source-->
    <bean id="dataSource" class="oracle.jdbc.pool.OracleDataSource">
        <property name="URL" value="jdbc:oracle:thin:@localhost:1521:xe" />
        <property name="user" value="portafolio"/>
        <property name="password" value="portafolio"/>
    </bean>

    <!--Data Source-->
    <bean id="postgresqlDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="org.postgresql.Driver"/>
        <property name="jdbcUrl" value="jdbc:postgresql://${jdbc.host}/${jdbc.db}?charSet=UTF-8"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="minPoolSize" value="${c3p0.min_size}"/>
        <property name="maxPoolSize" value="${c3p0.max_size}"/>
        <property name="maxIdleTime" value="${c3p0.timeout}"/>
        <property name="maxStatements" value="${c3p0.max_statements}"/>
    </bean>


    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="postgresqlDataSource"/>
        <property name="packagesToScan">
            <array>
                <value>com.mis_ofertas_api.app.model</value>
            </array>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL95Dialect</prop>
             <!-- <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>-->
                <prop key="hibernate.connection.charSet">UTF-8</prop>
                <prop key="hibernate.hbm2ddl.auto">${jdbc.auto}</prop>
               <!-- <prop key="hibernate.hbm2ddl.import_files">${jdbc.sqlfile}</prop>-->
                <prop key="hibernate.show_sql">${jdbc.showsql}</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.id.new_generator_mappings">true</prop>
            </props>
        </property>
    </bean>


    <!--Transaction-->
    <!--Transaction-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>



    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
                    <property name="name" value="default"/>
                </bean>
            </set>
        </property>
    </bean>




</beans>
